"""initial

Revision ID: 9d81f8044f2b
Revises: 
Create Date: 2025-05-10 22:49:12.058398

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9d81f8044f2b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('game_mode',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_mode_name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('game_mode_name')
    )
    op.create_table('hero_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.Text(), nullable=False),
    sa.Column('role_icon', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_name')
    )
    op.create_table('map',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('map_name', sa.Text(), nullable=False),
    sa.Column('map_image', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('map_name')
    )
    op.create_table('medal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('medal_name', sa.Text(), nullable=False),
    sa.Column('medal_icon', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('medal_name')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('permission', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_permission_permission'), ['permission'], unique=True)

    op.create_table('player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gamertag', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('player', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_player_gamertag'), ['gamertag'], unique=True)

    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_role_role_name'), ['role_name'], unique=True)

    op.create_table('team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('team', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_team_team_name'), ['team_name'], unique=True)

    op.create_table('visibility',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('visibility', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('visibility')
    )
    op.create_table('hero',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hero_name', sa.Text(), nullable=False),
    sa.Column('hero_role_id', sa.Integer(), nullable=False),
    sa.Column('hero_image', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['hero_role_id'], ['hero_role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hero_name')
    )
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('tournament',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('visibility_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['visibility_id'], ['visibility.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.Text(), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=True),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('global_role_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('profile_picture', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['global_role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('game',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('round', sa.Integer(), nullable=False),
    sa.Column('team_a_id', sa.Integer(), nullable=False),
    sa.Column('team_b_id', sa.Integer(), nullable=False),
    sa.Column('winning_team', sa.Integer(), nullable=True),
    sa.Column('is_draw', sa.Boolean(), nullable=False),
    sa.Column('game_mode_id', sa.Integer(), nullable=False),
    sa.Column('map_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_mode_id'], ['game_mode.id'], ),
    sa.ForeignKeyConstraint(['map_id'], ['map.id'], ),
    sa.ForeignKeyConstraint(['team_a_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['team_b_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournament.id'], ),
    sa.ForeignKeyConstraint(['winning_team'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournament_users',
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tournament_role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournament.id'], ),
    sa.ForeignKeyConstraint(['tournament_role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('tournament_id', 'user_id')
    )
    op.create_table('game_medals',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('medal_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['game.id'], ),
    sa.ForeignKeyConstraint(['medal_id'], ['medal.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('game_id', 'medal_id', 'player_id')
    )
    op.create_table('game_players',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('hero_id', sa.Integer(), nullable=False),
    sa.Column('kills', sa.Integer(), nullable=False),
    sa.Column('deaths', sa.Integer(), nullable=False),
    sa.Column('assists', sa.Integer(), nullable=False),
    sa.Column('final_hits', sa.Integer(), nullable=False),
    sa.Column('damage', sa.Integer(), nullable=False),
    sa.Column('damage_blocked', sa.Integer(), nullable=False),
    sa.Column('healing', sa.Integer(), nullable=False),
    sa.Column('accuracy_pct', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['game.id'], ),
    sa.ForeignKeyConstraint(['hero_id'], ['hero.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('game_id', 'player_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('game_players')
    op.drop_table('game_medals')
    op.drop_table('tournament_users')
    op.drop_table('game')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('tournament')
    op.drop_table('role_permissions')
    op.drop_table('hero')
    op.drop_table('visibility')
    with op.batch_alter_table('team', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_team_team_name'))

    op.drop_table('team')
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_role_role_name'))

    op.drop_table('role')
    with op.batch_alter_table('player', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_player_gamertag'))

    op.drop_table('player')
    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_permission_permission'))

    op.drop_table('permission')
    op.drop_table('medal')
    op.drop_table('map')
    op.drop_table('hero_role')
    op.drop_table('game_mode')
    # ### end Alembic commands ###
